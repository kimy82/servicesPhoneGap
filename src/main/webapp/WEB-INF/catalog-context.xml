<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<import resource="DataSource.xml"/>
	<import resource="Hibernate.xml"/>
	
	<bean class="org.apache.wink.spring.Registrar">
		<property name="classes">
			<set value-type="java.lang.Class">
			</set>
		</property>
		<property name="instances">
			<set>
				<ref local="usersSrv" />
			</set>
		</property>
	</bean>


	<!-- Serveis rest -->	
	<bean id="usersSrv" class="com.online.restful.UsersSrv" >
	    <property name="sessionFactory" ref="sessionFactory"></property>
	    <property name="usersDao" ref="usersDao"></property>
	    <property name="idiomaDao" ref="idiomaDao"></property>
	    <property name="categoryDao" ref="categoryDao"></property>	 
	    <property name="companyDao" ref="companyDao" />   
	</bean>
	<!-- DAOS -->
	<bean id="usersDao" class="com.online.dao.impl.UsersDaoImpl" >
   		<property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   <bean id="companyDao" class="com.online.dao.impl.CompanyDaoImpl" >
   		<property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   <bean id="idiomaDao" class="com.online.dao.impl.IdiomaDaoImpl" >
   		<property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
    <bean id="categoryDao" class="com.online.dao.impl.CategoryDaoImpl" >
   		<property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
	<!-- bookmarks.customPropertiesFactory defines loaded of the custom properties file -->
	<bean id="catalog.customPropertiesFactory"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>WEB-INF/catalog.properties</value>
			</list>
		</property>
	</bean>

	<!-- bookmarks.placeholderConfigurer overrides the default winkPropertiesFactory placeholder
	     that causes Wink to use bookmarks.customPropertiesFactory instead of the default one -->
	<bean id="catalog.placeholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
		<property name="propertiesArray">
			<list>
				<props>
					<prop key="winkPropertiesFactory">catalog.customPropertiesFactory
					</prop>
				</props>
			</list>
		</property>
	</bean>
	<!-- JOB PER CREAR INSERTS INICIALS A LA BBDD -->
	<bean id="job" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.online.crons.WorkOutPunctuation" />
        <property name="jobDataAsMap">
            <map>
                 <entry key="entorn" value="local" />
                 <entry key="usersDao" value-ref="usersDao" /> 
                 <entry key="companyDao" value-ref="companyDao" />
                 <entry key="idiomaDao" value-ref="idiomaDao" /> 
                 <entry key="categoryDao" value-ref="categoryDao"/>	                   
            </map>
        </property>
    </bean>
    <bean id="onstartup" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="job" />
		<property name="startDelay" value="10000" />
		<!-- repeat every 50 seconds -->
		<property name="repeatInterval" value="50000" />
		<property name="repeatCount" value="0" />
	</bean>
	 <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref local="onstartup" />                
            </list>
        </property>
    </bean>
</beans>